type Skill {
    name: String!
    id: String!
}

type SkillCategory {
    name: String!
    id: String!
}

type Prompt {
    id: String!
    question: String!
    type: String!
    correctAnswer: String
    choices: [String!]
}

type Certification {
    name: String!
    id: String!
}

interface RequirementFor @relationshipProperties {
    minRating: Int
    minSkills: Int
    minProjects: Int
}

type Knowledge {
    name: String!
    description: String!
    id: String!
    requiredPrompts: [Prompt!]! @relationship(type: "REQUIREMENT_FOR", direction: IN, properties: "RequirementFor")
    requiredCerts: [Certification!]! @relationship(type: "REQUIREMENT_FOR", direction: IN, properties: "RequirementFor")
    requiredSkills: [Skill!]! @relationship(type: "REQUIREMENT_FOR", direction: IN, properties: "RequirementFor")
    requiredCategories: [SkillCategory!]! @relationship(type: "REQUIREMENT_FOR", direction: IN, properties: "RequirementFor")
}

type Competency {
    levels: [Int!]!
    name: String!
    id: String!
}